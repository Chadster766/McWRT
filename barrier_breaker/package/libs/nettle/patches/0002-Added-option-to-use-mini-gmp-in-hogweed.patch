From 8d5360e3e5eea3c9dbfd44f9b981f18a41605e45 Mon Sep 17 00:00:00 2001
From: Nikos Mavrogiannopoulos <nmav@gnutls.org>
Date: Sun, 9 Mar 2014 11:30:25 +0100
Subject: [PATCH 2/5] Added option to use mini-gmp in hogweed.

---
 Makefile.in              |  8 +++--
 bignum.h                 |  6 +++-
 configure.ac             | 76 +++++++++++++++++++++++++++++++++++-------------
 dsa.h                    |  2 +-
 ecc-internal.h           |  2 +-
 ecc.h                    |  2 +-
 eccdata.c                | 12 +++++++-
 examples/Makefile.in     |  2 +-
 examples/ecc-benchmark.c |  2 ++
 gmp-glue.c               |  1 +
 gmp-glue.h               |  2 +-
 hogweed.pc.in            |  2 +-
 mini-gmp.c               |  2 +-
 mini-gmp.h               |  9 ++++++
 pkcs1.h                  |  2 +-
 rsa.h                    |  2 +-
 testsuite/Makefile.in    |  4 +--
 testsuite/testutils.h    |  5 ++--
 18 files changed, 102 insertions(+), 39 deletions(-)

diff --git a/Makefile.in b/Makefile.in
index 3b0e1cb..42be3a9 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -16,6 +16,10 @@ MKDIR_P = @MKDIR_P@
 
 OPT_ASM_SOURCES = @OPT_ASM_SOURCES@
 
+OPT_HOGWEED_SOURCES = @OPT_HOGWEED_SOURCES@
+
+OPT_HOGWEED_HEADERS = @OPT_HOGWEED_HEADERS@
+
 SUBDIRS = tools testsuite examples
 
 include config.make
@@ -106,7 +110,7 @@ nettle_SOURCES = aes-decrypt-internal.c aes-decrypt.c \
 		 nettle-meta-armors.c \
 		 write-be32.c write-le32.c write-le64.c
 
-hogweed_SOURCES = sexp.c sexp-format.c \
+hogweed_SOURCES = $(OPT_HOGWEED_SOURCES) sexp.c sexp-format.c \
 		  sexp-transport.c sexp-transport-format.c \
 		  bignum.c bignum-next-prime.c \
 		  bignum-random.c bignum-random-prime.c \
@@ -156,7 +160,7 @@ HEADERS = aes.h arcfour.h arctwo.h asn1.h bignum.h blowfish.h \
 	  pgp.h pkcs1.h realloc.h ripemd160.h rsa.h rsa-compat.h \
 	  salsa20.h sexp.h \
 	  serpent.h sha.h sha1.h sha2.h sha3.h twofish.h \
-	  umac.h yarrow.h
+	  umac.h yarrow.h $(OPT_HOGWEED_HEADERS)
 
 INSTALL_HEADERS = $(HEADERS) nettle-stdint.h
 
diff --git a/bignum.h b/bignum.h
index 746b21f..1f2ff07 100644
--- a/bignum.h
+++ b/bignum.h
@@ -28,7 +28,11 @@
 
 #include "nettle-meta.h"
 
-#include <gmp.h>
+#ifdef USE_MINI_GMP
+# include "mini-gmp.h"
+#else
+# include <gmp.h>
+#endif
 #include "nettle-types.h"
 
 #ifdef __cplusplus
diff --git a/configure.ac b/configure.ac
index 78a3d4e..93eb09a 100644
--- a/configure.ac
+++ b/configure.ac
@@ -72,6 +72,16 @@ AC_ARG_ENABLE(arm-neon,
   AC_HELP_STRING([--enable-arm-neon], [Enable ARM Neon assembly. (default=auto)]),,
   [enable_arm_neon=auto])
 
+AC_ARG_ENABLE(mini-gmp,
+  AC_HELP_STRING([--enable-mini-gmp], [Disable gmp support and enable mini-gmp. (default=disabled)]),,
+  [enable_mini_gmp=no])
+
+if test "x$enable_mini_gmp" = xyes ; then
+GMP_LIBS=""
+else
+GMP_LIBS="-lgmp"
+fi
+
 LSH_RPATH_INIT([`echo $with_lib_path | sed 's/:/ /g'` \
     `echo $exec_prefix | sed "s@^NONE@$prefix/lib@g" | sed "s@^NONE@$ac_default_prefix/lib@g"` \
     /usr/local/lib /sw/local/lib /sw/lib \
@@ -409,7 +419,7 @@ case "$host_os" in
     LIBHOGWEED_SONAME='libhogweed.$(LIBHOGWEED_MAJOR).dylib'
     LIBHOGWEED_FILE='libhogweed.$(LIBHOGWEED_MAJOR).$(LIBHOGWEED_MINOR).dylib'
     LIBHOGWEED_LINK='$(CC) $(CFLAGS) -dynamiclib -L. $(LDFLAGS) -install_name ${libdir}/$(LIBHOGWEED_SONAME) -compatibility_version $(LIBHOGWEED_MAJOR) -current_version $(LIBHOGWEED_MAJOR).$(LIBHOGWEED_MINOR)'
-    LIBHOGWEED_LIBS='-lnettle -lgmp'
+    LIBHOGWEED_LIBS='-lnettle $(GMP_LIBS)'
     ;;
   solaris*)
     # Sun's ld uses -h to set the soname, and this option is passed
@@ -425,7 +435,7 @@ case "$host_os" in
     LIBHOGWEED_SONAME='$(LIBHOGWEED_FORLINK).$(LIBHOGWEED_MAJOR)'
     LIBHOGWEED_FILE='$(LIBHOGWEED_SONAME).$(LIBHOGWEED_MINOR)'
     LIBHOGWEED_LINK='$(CC) $(CFLAGS) $(LDFLAGS) -L. -G -h $(LIBHOGWEED_SONAME)'
-    LIBHOGWEED_LIBS='-lnettle -lgmp'
+    LIBHOGWEED_LIBS='-lnettle $(GMP_LIBS)'
     ;;
   *)
     LIBNETTLE_FORLINK=libnettle.so
@@ -443,7 +453,7 @@ case "$host_os" in
     # -lhogweed -lgmp -lnettle are still required). Also makes dlopen
     # of libhogweed.so work, without having to use RTLD_GLOBAL.
     # Depends on -L. above, to locate nettle.so.
-    LIBHOGWEED_LIBS='-lnettle -lgmp'
+    LIBHOGWEED_LIBS='-lnettle $(GMP_LIBS)'
     ;;
 esac
 
@@ -644,32 +654,55 @@ if test "x$nettle_cv_fcntl_locking" = "xyes" ; then
   AC_DEFINE(HAVE_FCNTL_LOCKING)
 fi
 
-# Checks for libraries
-AC_CHECK_LIB(gmp, __gmpz_getlimbn,,
-    [AC_MSG_WARN(
+TESTSUITE_LIBS=""
+
+OPT_HOGWEED_SOURCES=""
+OPT_HOGWEED_HEADERS=""
+if test "x$enable_mini_gmp" = xyes ; then
+  OPT_HOGWEED_SOURCES="$OPT_HOGWEED_SOURCES mini-gmp.c"
+  OPT_HOGWEED_HEADERS="$OPT_HOGWEED_HEADERS mini-gmp.h"
+  AC_DEFINE([USE_MINI_GMP], 1, [Use mini-gmp instead of gmp])
+  IF_NOT_MINI_GMP='#'
+  GMP_NUMB_BITS="0"
+else
+
+  # Checks for libraries
+  AC_CHECK_LIB(gmp, __gmpz_getlimbn,,
+      [AC_MSG_WARN(
 [GNU MP not found, or not 3.1 or up, see http://gmplib.org/.
 Support for public key algorithms will be unavailable.])]
-    enable_public_key=no)
+      enable_public_key=no)
 
-# Add -R flags needed to run programs linked with gmp
-LSH_RPATH_FIX
+  # Add -R flags needed to run programs linked with gmp
+  LSH_RPATH_FIX
 
-# Check for gmp limb size
-nettle_cv_gmp_numb_bits=0
-if test "$enable_public_key" = yes; then
-  AC_MSG_CHECKING([for GMP limb size])
-  AC_COMPUTE_INT(nettle_cv_gmp_numb_bits, [GMP_NUMB_BITS],
-      [#include <gmp.h>],
-      [AC_MSG_FAILURE([cannot find value of GMP_NUMB_BITS])])
+  # Check for gmp limb size
+  nettle_cv_gmp_numb_bits=0
+  if test "$enable_public_key" = yes; then
+    AC_MSG_CHECKING([for GMP limb size])
+    AC_COMPUTE_INT(nettle_cv_gmp_numb_bits, [GMP_NUMB_BITS],
+        [#include <gmp.h>],
+        [AC_MSG_FAILURE([cannot find value of GMP_NUMB_BITS])])
 
-  AC_MSG_RESULT([$nettle_cv_gmp_numb_bits bits])
+    AC_MSG_RESULT([$nettle_cv_gmp_numb_bits bits])
+  fi
+
+  GMP_NUMB_BITS="$nettle_cv_gmp_numb_bits"
+
+  AH_TEMPLATE([HAVE_MPZ_POWM_SEC], [Define if mpz_powm_sec is available (appeared in GMP-5)])
+  AC_CHECK_FUNC(__gmpz_powm_sec, [AC_DEFINE(HAVE_MPZ_POWM_SEC)])
+
+  IF_NOT_MINI_GMP=''
+  TESTSUITE_LIBS="-lgmp"
 fi
 
-GMP_NUMB_BITS="$nettle_cv_gmp_numb_bits"
-AC_SUBST([GMP_NUMB_BITS])
+AC_SUBST([GMP_LIBS])
 
-AH_TEMPLATE([HAVE_MPZ_POWM_SEC], [Define if mpz_powm_sec is available (appeared in GMP-5)])
-AC_CHECK_FUNC(__gmpz_powm_sec, [AC_DEFINE(HAVE_MPZ_POWM_SEC)])
+dnl The testsuite requires gmp
+AC_SUBST([TESTSUITE_LIBS])
+AC_SUBST([GMP_NUMB_BITS])
+AC_SUBST([OPT_HOGWEED_SOURCES])
+AC_SUBST([OPT_HOGWEED_HEADERS])
 
 AH_TEMPLATE([WITH_HOGWEED], [Defined if public key features are enabled])
 
@@ -714,6 +747,7 @@ else
   IF_DOCUMENTATION='#'
 fi
 
+AC_SUBST(IF_NOT_MINI_GMP)
 AC_SUBST(IF_HOGWEED)
 AC_SUBST(IF_STATIC)
 AC_SUBST(IF_SHARED)
diff --git a/dsa.h b/dsa.h
index 7ee2624..478e4fc 100644
--- a/dsa.h
+++ b/dsa.h
@@ -26,7 +26,7 @@
 #ifndef NETTLE_DSA_H_INCLUDED
 #define NETTLE_DSA_H_INCLUDED
 
-#include <gmp.h>
+#include "bignum.h"
 
 #include "nettle-types.h"
 
diff --git a/ecc-internal.h b/ecc-internal.h
index e8974fe..5cdd0e1 100644
--- a/ecc-internal.h
+++ b/ecc-internal.h
@@ -25,7 +25,7 @@
 #ifndef NETTLE_ECC_INTERNAL_H_INCLUDED
 #define NETTLE_ECC_INTERNAL_H_INCLUDED
 
-#include <gmp.h>
+#include "bignum.h"
 
 #include "nettle-types.h"
 #include "ecc-curve.h"
diff --git a/ecc.h b/ecc.h
index 609d246..924f8ec 100644
--- a/ecc.h
+++ b/ecc.h
@@ -25,7 +25,7 @@
 #ifndef NETTLE_ECC_H_INCLUDED
 #define NETTLE_ECC_H_INCLUDED
 
-#include <gmp.h>
+#include "bignum.h"
 
 #include "nettle-types.h"
 
diff --git a/eccdata.c b/eccdata.c
index 466753c..24f64e3 100644
--- a/eccdata.c
+++ b/eccdata.c
@@ -24,11 +24,14 @@
 
 /* Development of Nettle's ECC support was funded by the .SE Internet Fund. */
 
+#include "config.h"
+
 #include <assert.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
 
+#include "mini-gmp.h"
 #include "mini-gmp.c"
 
 /* Affine coordinates, for simplicity. Infinity point represented as x
@@ -895,6 +898,7 @@ int
 main (int argc, char **argv)
 {
   struct ecc_curve ecc;
+  unsigned bits;
 
   if (argc < 4)
     {
@@ -902,6 +906,7 @@ main (int argc, char **argv)
       return EXIT_FAILURE;
     }
 
+  bits = atoi(argv[4]);
   ecc_curve_init (&ecc, atoi(argv[1]));
 
   ecc_pippenger_precompute (&ecc, atoi(argv[2]), atoi(argv[3]));
@@ -912,7 +917,12 @@ main (int argc, char **argv)
   ecc_curve_check (&ecc);
 
   if (argc > 4)
-    output_curve (&ecc, atoi(argv[4]));
+    {
+      /* when using mini-gmp we cannot estimate it on configure */
+      if (bits == 0)
+        bits = GMP_NUMB_BITS;
+      output_curve (&ecc, bits);
+    }
 
   return EXIT_SUCCESS;
 }
diff --git a/examples/Makefile.in b/examples/Makefile.in
index 563d0dc..2bb0436 100644
--- a/examples/Makefile.in
+++ b/examples/Makefile.in
@@ -11,7 +11,7 @@ PRE_CPPFLAGS = -I.. -I$(top_srcdir)
 PRE_LDFLAGS = -L..
 
 OPENSSL_LIBFLAGS = @OPENSSL_LIBFLAGS@
-BENCH_LIBS = @BENCH_LIBS@ -lm
+BENCH_LIBS = @BENCH_LIBS@ $(TESTSUITE_LIBS) -lm
 
 HOGWEED_TARGETS = rsa-keygen$(EXEEXT) rsa-sign$(EXEEXT) \
 	      rsa-verify$(EXEEXT) rsa-encrypt$(EXEEXT) rsa-decrypt$(EXEEXT) \
diff --git a/examples/ecc-benchmark.c b/examples/ecc-benchmark.c
index 1faf6dc..16a1fd6 100644
--- a/examples/ecc-benchmark.c
+++ b/examples/ecc-benchmark.c
@@ -37,6 +37,8 @@
 
 #include "timing.h"
 
+#undef USE_MINI_GMP
+#include <gmp.h>
 #include "../ecc.h"
 #include "../ecc-internal.h"
 #include "../gmp-glue.h"
diff --git a/gmp-glue.c b/gmp-glue.c
index a2633a5..d76fdea 100644
--- a/gmp-glue.c
+++ b/gmp-glue.c
@@ -239,3 +239,4 @@ gmp_free_limbs (mp_limb_t *p, mp_size_t n)
 
   free_func (p, (size_t) n * sizeof(mp_limb_t));
 }
+
diff --git a/gmp-glue.h b/gmp-glue.h
index 269667f..f51b5b5 100644
--- a/gmp-glue.h
+++ b/gmp-glue.h
@@ -23,7 +23,7 @@
 #ifndef NETTLE_GMP_GLUE_H_INCLUDED
 #define NETTLE_GMP_GLUE_H_INCLUDED
 
-#include <gmp.h>
+#include "bignum.h"
 
 #include "nettle-stdint.h"
 
diff --git a/hogweed.pc.in b/hogweed.pc.in
index 457f5f2..9a9dea0 100644
--- a/hogweed.pc.in
+++ b/hogweed.pc.in
@@ -13,6 +13,6 @@ URL: http://www.lysator.liu.se/~nisse/nettle
 Version: @PACKAGE_VERSION@
 Requires.private: nettle
 Libs: -L${libdir} -lhogweed
-Libs.private: -lgmp
+Libs.private: @GMP_LIBS@
 Cflags: -I${includedir}
 
diff --git a/mini-gmp.c b/mini-gmp.c
index 766df30..cf76a2a 100644
--- a/mini-gmp.c
+++ b/mini-gmp.c
@@ -1388,7 +1388,7 @@ mpz_clear (mpz_t r)
   gmp_free (r->_mp_d);
 }
 
-static void *
+void *
 mpz_realloc (mpz_t r, mp_size_t size)
 {
   size = GMP_MAX (size, 1);
diff --git a/mini-gmp.h b/mini-gmp.h
index d8f691f..dac7d1e 100644
--- a/mini-gmp.h
+++ b/mini-gmp.h
@@ -70,6 +70,11 @@ typedef struct
   mp_limb_t *_mp_d;		/* Pointer to the limbs.  */
 } __mpz_struct;
 
+typedef __mpz_struct MP_INT;
+
+#define GMP_NUMB_BITS (SIZEOF_LONG*8)
+#define GMP_NUMB_MASK (~0)
+
 typedef __mpz_struct mpz_t[1];
 
 typedef __mpz_struct *mpz_ptr;
@@ -119,6 +124,10 @@ void mpz_init (mpz_t);
 void mpz_init2 (mpz_t, mp_bitcnt_t);
 void mpz_clear (mpz_t);
 
+void *
+mpz_realloc (mpz_t r, mp_size_t size);
+#define _mpz_realloc mpz_realloc
+
 #define mpz_odd_p(z)   (((z)->_mp_size != 0) & (int) (z)->_mp_d[0])
 #define mpz_even_p(z)  (! mpz_odd_p (z))
 
diff --git a/pkcs1.h b/pkcs1.h
index fa27225..f402688 100644
--- a/pkcs1.h
+++ b/pkcs1.h
@@ -26,7 +26,7 @@
 #ifndef NETTLE_PKCS1_H_INCLUDED
 #define NETTLE_PKCS1_H_INCLUDED
 
-#include <gmp.h>
+#include "bignum.h"
 #include "nettle-types.h"
 
 #ifdef __cplusplus
diff --git a/rsa.h b/rsa.h
index 4226f38..c293cd1 100644
--- a/rsa.h
+++ b/rsa.h
@@ -26,7 +26,7 @@
 #ifndef NETTLE_RSA_H_INCLUDED
 #define NETTLE_RSA_H_INCLUDED
 
-#include <gmp.h>
+#include "bignum.h"
 #include "nettle-types.h"
 
 #include "md5.h"
diff --git a/testsuite/Makefile.in b/testsuite/Makefile.in
index 91f6e2a..c8ab5f6 100644
--- a/testsuite/Makefile.in
+++ b/testsuite/Makefile.in
@@ -47,7 +47,7 @@ TS_HOGWEED = $(TS_HOGWEED_SOURCES:.c=$(EXEEXT))
 TS_C = $(TS_NETTLE) @IF_HOGWEED@ $(TS_HOGWEED)
 TS_CXX = @IF_CXX@ $(CXX_SOURCES:.cxx=$(EXEEXT))
 TARGETS = $(TS_C) $(TS_CXX)
-TS_SH = sexp-conv-test pkcs1-conv-test symbols-test
+TS_SH = sexp-conv-test pkcs1-conv-test @IF_NOT_MINI_GMP@ symbols-test
 TS_ALL = $(TARGETS) $(TS_SH)
 EXTRA_SOURCES = sha1-huge-test.c
 EXTRA_TARGETS = $(EXTRA_SOURCES:.c=$(EXEEXT))
@@ -75,7 +75,7 @@ all: $(TARGETS) $(EXTRA_TARGETS)
 
 LIB_HOGWEED = @IF_HOGWEED@ -lhogweed
 TEST_OBJS = testutils.$(OBJEXT) ../nettle-internal.$(OBJEXT) \
-	    $(LIB_HOGWEED) -lnettle $(LIBS)
+	    $(LIB_HOGWEED) -lnettle $(LIBS) $(TESTSUITE_LIBS)
 
 ../nettle-internal.$(OBJEXT):
 	( cd .. && $(MAKE) nettle-internal.$(OBJEXT) )
diff --git a/testsuite/testutils.h b/testsuite/testutils.h
index 123bae2..a677a2a 100644
--- a/testsuite/testutils.h
+++ b/testsuite/testutils.h
@@ -12,11 +12,10 @@
 #include <stdio.h>
 #include <string.h>
 
-#if HAVE_LIBGMP
-# include "bignum.h"
-#endif
 
 #if WITH_HOGWEED
+# include <gmp.h>
+# undef USE_MINI_GMP
 # include "rsa.h"
 # include "dsa.h"
 # include "ecc-curve.h"
-- 
1.9.2

