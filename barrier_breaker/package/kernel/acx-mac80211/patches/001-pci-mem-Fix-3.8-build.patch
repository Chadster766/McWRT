From 8a0f5890019bf43f4bc95ef0754b062ddfcfa9cd Mon Sep 17 00:00:00 2001
From: Oliver Winker <oliver@oli1170.net>
Date: Sun, 10 Mar 2013 21:04:23 +0100
Subject: [PATCH 1/3] pci, mem: Fix 3.8 build

__devexit and __devinit not used anymore in 3.8

Signed-off-by: Reinhard Karcher <reinhard.karcher@gmx.net>
Signed-off-by: Oliver Winker <oliver@oli1170.net>
---
 mem.c | 13 ++++++++++++-
 pci.c | 26 +++++++++++++++++++++++++-
 2 files changed, 37 insertions(+), 2 deletions(-)

--- a/mem.c
+++ b/mem.c
@@ -2216,7 +2216,11 @@ int acx100mem_ioctl_set_phy_amp_bias(str
  * ==================================================
  */
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 8, 0)
 static int __devinit acxmem_probe(struct platform_device *pdev)
+#else
+static int acxmem_probe(struct platform_device *pdev)
+#endif
 {
 	acx_device_t *adev = NULL;
 	const char *chip_name;
@@ -2392,7 +2396,11 @@ static int __devinit acxmem_probe(struct
  * pdev - ptr to PCI device structure containing info about pci
  * configuration
  */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 8, 0)
 static int __devexit acxmem_remove(struct platform_device *pdev)
+#else
+static int acxmem_remove(struct platform_device *pdev)
+#endif
 {
 	struct ieee80211_hw *hw = (struct ieee80211_hw *)
 		platform_get_drvdata(pdev);
@@ -2594,8 +2602,11 @@ static struct platform_driver acxmem_dri
 		.name = "acx-mem",
 	},
 	.probe = acxmem_probe,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 8, 0)
 	.remove = __devexit_p(acxmem_remove),
-
+#else
+	.remove = acxmem_remove,
+#endif
 #ifdef CONFIG_PM
 	.suspend = acxmem_e_suspend,
 	.resume = acxmem_e_resume
--- a/pci.c
+++ b/pci.c
@@ -1039,7 +1039,11 @@ int acx100pci_ioctl_set_phy_amp_bias(str
  * id	- ptr to the device id entry that matched this device
  */
 #ifdef CONFIG_PCI
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 8, 0)
 static int __devinit acxpci_probe(struct pci_dev *pdev,
+#else
+static int acxpci_probe(struct pci_dev *pdev,
+#endif
 				const struct pci_device_id *id)
 {
 	unsigned long mem_region1 = 0;
@@ -1292,7 +1296,11 @@ static int __devinit acxpci_probe(struct
  *
  * pdev - ptr to PCI device structure containing info about pci configuration
  */
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 8, 0)
 static void __devexit acxpci_remove(struct pci_dev *pdev)
+#else
+static void acxpci_remove(struct pci_dev *pdev)
+#endif
 {
 	struct ieee80211_hw *hw
 		= (struct ieee80211_hw *) pci_get_drvdata(pdev);
@@ -1505,7 +1513,11 @@ static struct pci_driver acxpci_driver =
 	.name		= "acx_pci",
 	.id_table	= acxpci_id_tbl,
 	.probe		= acxpci_probe,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 8, 0)
 	.remove		= __devexit_p(acxpci_remove),
+#else
+	.remove		= acxpci_remove,
+#endif
 #ifdef CONFIG_PM
 	.suspend	= acxpci_e_suspend,
 	.resume		= acxpci_e_resume
@@ -1603,8 +1615,12 @@ static struct vlynq_device_id acx_vlynq_
 };
 
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 8, 0)
 static __devinit int vlynq_probe(struct vlynq_device *vdev,
-				 struct vlynq_device_id *id)
+#else
+static int vlynq_probe(struct vlynq_device *vdev,
+#endif
+				  struct vlynq_device_id *id)
 {
 	int result = -EIO, i;
 	u32 addr;
@@ -1785,7 +1801,11 @@ static __devinit int vlynq_probe(struct
 	return result;
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 8, 0)
 static __devexit void vlynq_remove(struct vlynq_device *vdev)
+#else
+static void vlynq_remove(struct vlynq_device *vdev)
+#endif
 {
 	struct ieee80211_hw *hw = vlynq_get_drvdata(vdev);
 	acx_device_t *adev = hw2adev(hw);
@@ -1851,7 +1871,11 @@ static struct vlynq_driver acxvlynq_driv
 	.name = "acx_vlynq",
 	.id_table = acx_vlynq_id,
 	.probe = vlynq_probe,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 8, 0)
 	.remove = __devexit_p(vlynq_remove),
+#else
+	.remove = vlynq_remove,
+#endif
 };
 #endif /* CONFIG_VLYNQ */
 
