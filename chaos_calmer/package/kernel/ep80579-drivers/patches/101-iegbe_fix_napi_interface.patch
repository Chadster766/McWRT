--- a/Embedded/src/GbE/iegbe_main.c
+++ b/Embedded/src/GbE/iegbe_main.c
@@ -3465,12 +3465,12 @@ static irqreturn_t iegbe_intr_msi(int ir
 	    printk("Critical error! ICR = 0x%x\n", icr);
 	    return IRQ_HANDLED;
 	}
-	if (likely(netif_rx_schedule_prep(netdev, &adapter->napi))) {
+	if (likely(napi_schedule_prep(&adapter->napi))) {
 		adapter->total_tx_bytes = 0;
 		adapter->total_tx_packets = 0;
 		adapter->total_rx_bytes = 0;
 		adapter->total_rx_packets = 0;
-		__netif_rx_schedule(netdev, &adapter->napi);
+		__napi_schedule(&adapter->napi);
 	} else
 		iegbe_irq_enable(adapter);
 
@@ -3527,12 +3527,12 @@ iegbe_intr(int irq, void *data)
 		E1000_WRITE_REG(&adapter->hw, IMC, ~0);
 		E1000_WRITE_FLUSH(&adapter->hw);
 	}
-	if (likely(netif_rx_schedule_prep(netdev, &adapter->napi))) {
+	if (likely(napi_schedule_prep(&adapter->napi))) {
 		adapter->total_tx_bytes = 0;
 		adapter->total_tx_packets = 0;
 		adapter->total_rx_bytes = 0;
 		adapter->total_rx_packets = 0;
-		__netif_rx_schedule(netdev, &adapter->napi);
+		__napi_schedule(&adapter->napi);
 	} else
 		/* this really should not happen! if it does it is basically a
 		 * bug, but not a hard error, so enable ints and continue */
@@ -3574,7 +3574,7 @@ static int iegbe_clean(struct napi_struc
 	if (work_done < budget) {
 		if (likely(adapter->itr_setting & 3))
 			iegbe_set_itr(adapter);
-		netif_rx_complete(poll_dev, napi);
+		napi_complete(napi);
 		iegbe_irq_enable(adapter);
 	}
 
