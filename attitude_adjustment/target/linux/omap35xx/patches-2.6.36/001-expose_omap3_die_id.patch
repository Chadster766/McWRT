diff --git a/arch/arm/mach-omap2/id.c b/arch/arm/mach-omap2/id.c
index 9a879f9..9cefef4 100644
--- a/arch/arm/mach-omap2/id.c
+++ b/arch/arm/mach-omap2/id.c
@@ -85,6 +85,9 @@ EXPORT_SYMBOL(omap_type);
 
 #define read_tap_reg(reg)	__raw_readl(tap_base  + (reg))
 
+static ssize_t die_id_show(struct kobject *, struct kobj_attribute *, char *);
+static struct kobj_attribute die_id_attr = __ATTR(die_id, 0444, die_id_show, NULL);
+
 struct omap_id {
 	u16	hawkeye;	/* Silicon type (Hawkeye id) */
 	u8	dev;		/* Device type from production_id reg */
@@ -104,6 +107,17 @@ static struct omap_id omap_ids[] __initdata = {
 static void __iomem *tap_base;
 static u16 tap_prod_id;
 
+static ssize_t die_id_show(struct kobject *kobj, struct kobj_attribute *attr,
+				char *buf)
+{
+	return sprintf(buf, "Die ID: %08x%08x%08x%08x\n",
+			read_tap_reg(OMAP_TAP_DIE_ID_0),
+			read_tap_reg(OMAP_TAP_DIE_ID_1),
+			read_tap_reg(OMAP_TAP_DIE_ID_2),
+			read_tap_reg(OMAP_TAP_DIE_ID_3));
+
+}
+
 void omap_get_die_id(struct omap_die_id *odi)
 {
 	odi->id_0 = read_tap_reg(OMAP_TAP_DIE_ID_0);
@@ -457,3 +471,15 @@ void __init omap2_set_globals_tap(struct omap_globals *omap2_globals)
 	else
 		tap_prod_id = 0x0208;
 }
+
+int __init export_omap_die_id(void)
+{
+	int error;
+
+	error = sysfs_create_file(power_kobj, &die_id_attr.attr);
+	if (error)
+		printk(KERN_ERR "sysfs_create_file failed: %d\n", error);
+	return error;
+}
+
+late_initcall(export_omap_die_id);
