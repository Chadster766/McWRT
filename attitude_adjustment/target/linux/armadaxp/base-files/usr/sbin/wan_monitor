#!/bin/sh
. /lib/functions.sh
. /lib/functions/network.sh
include /lib/network
#set -euf
local scriptname
scriptname="$(basename $0)"

log_message() {
	/usr/bin/logger "$scriptname: $1"
}

blinking_amber() {
	/usr/sbin/ledctrl wan_amber 255 500 500
}

wan_amber() {
	/usr/sbin/ledctrl wan_amber $1
}

blinking_white() {
	/usr/sbin/ledctrl wan_white 255 700 700
}

wan_white() {
	/usr/sbin/ledctrl wan_white $1
}

ping_host() {
	local host count timeout error
	host="heartbeat.belkin.com"
	count=3
	timeout=5
	error="$(/bin/ping -q -c $count -w $timeout $host 2&>1 > /dev/null)"

	if [ $? ]
	then
		wan_amber off
		wan_white on
	else
		wan_white off
		wan_amber on
		log_message "Failed to ping $host -- $error"
	fi
}

did_obtain_wan_ip() {
	local wanif wanipaddr
	wan_white off
	wan_amber on
	while [ ! network_find_wan wanif ]
	do
		log_message "Waiting for netifd to register wan interface"
		scan_interfaces
		sleep 1
	done
	while [ ! network_get_ipaddr wanipaddr "$wanif" ]
	do
		log_message "Obtaining IP address on if: $wanif"
		sleep 1	
	done
	return true
}

#FIXME: would hotplug better serve us here?
local wanportstatus
#echo "WAN LED MONITOR"
while true
do
	wanportstatus="$(cat /sys/class/neta-switch/port4/carrier)"
	#echo "Wan physical status" $wanportstatus
	if [ ! $? ]
	then
		log_message "Could not determine wan port status"
		wan_amber off
		wan_white off
		blinking_amber
	else
		if [ $wanportstatus = "Up" ]
		then
			if [ did_obtain_wan_ip ]
			then
				ping_host
			fi
		#If the carrier has only 2 possible states...
		#elif [ $wanportstatus = "Down" ]; then
		else
			log_message "No physical WAN cable"
			wan_amber off
			wan_white off
			blinking_amber 
		fi
	fi
	sleep 2
done
