From f48c75d7a686b23e1f803ceb3b5b4c3a05eff1dd Mon Sep 17 00:00:00 2001
From: Yehuda Yitschak <yehuday@marvell.com>
Date: Tue, 1 Jan 2013 12:56:32 +0200
Subject: [PATCH 385/609] PM: Added suspend to RAM support for GP board

Change-Id: I5dfe0d6cbda2bda44fcf67689637bd702cd77286
Signed-off-by: Yehuda Yitschak <yehuday@marvell.com>
Signed-off-by: Seif Mazareeb <seif@marvell.com>
---
 arch/arm/plat-armada/armada_suspend.S |   60 ++++++++++++++++++++++++---------
 1 file changed, 45 insertions(+), 15 deletions(-)

diff --git a/arch/arm/plat-armada/armada_suspend.S b/arch/arm/plat-armada/armada_suspend.S
index 7d8ad43..b850422 100644
--- a/arch/arm/plat-armada/armada_suspend.S
+++ b/arch/arm/plat-armada/armada_suspend.S
@@ -12,9 +12,24 @@
 #include <asm/assembler.h>
 #include <mach/hardware.h>
 
-#define GPIO_64_66_VALUE_REG			(INTER_REGS_BASE + 0x18180)
-#define GPIO_64_66_CTRL_REG				(INTER_REGS_BASE + 0x18184)
-#define MPP_CTRL_64_66_REG				(INTER_REGS_BASE + 0x18020)
+#if 1  /* B0-GP board GPIO pins*/
+#define MPP_CTRL_PM_REG				(INTER_REGS_BASE + 0x18008)
+#define GPIO_OUT_VALUE_REG			(INTER_REGS_BASE + 0x18100)
+#define GPIO_OUT_CTRL_REG			(INTER_REGS_BASE + 0x18104)
+#define MPP_SET_GPIO_MASK			(0xFFFFF000)
+#define GPIO_PIN_MASK				(0xFFF8FFFF)
+#define GPIO_CMD_VALUE				(0x10000)
+#define GPIO_ACK_VALUE				(0x70000)
+#else /* B0-HE board GPIO pins */
+#define MPP_SET_GPIO_MASK			(0xFFFFF000)
+#define GPIO_PIN_MASK				(0xFFFFFFF8)
+#define GPIO_CMD_VALUE				(0x1)
+#define GPIO_ACK_VALUE				(0x7)
+#define MPP_CTRL_PM_REG				(INTER_REGS_BASE + 0x18020)
+#define GPIO_OUT_VALUE_REG			(INTER_REGS_BASE + 0x18180)
+#define GPIO_OUT_CTRL_REG			(INTER_REGS_BASE + 0x18184)
+#endif
+
 #define MV_COHERENCY_FABRIC_CTRL_REG	(0x20200)
 
 /*
@@ -209,35 +224,50 @@ ENTRY(armadaxp_powerdown)
 	orr	r0, r0, r3
 
 	/*
-	 * Write 0x1 then 0x7 through MPP 64-67 to PIC that controls power
+	 * Write 0x1 then 0x7 through MPPs to PIC that controls power
 	 * 0x1 - Power off all voltages;  0x7 - Acknowledge command
 	 */
-	ldr r3, =(MPP_CTRL_64_66_REG)
-	ldr r4, =0x2000
-	str r4, [r3]
 
-	ldr r3, =(GPIO_64_66_VALUE_REG)
-	ldr r4, =(GPIO_64_66_CTRL_REG)
+	/* Set MPPs to GPIO */
 
-	ldr r5, =0x1
-	ldr r6, =0x0
+	ldr r3, =(MPP_CTRL_PM_REG)
+	ldr r5, =(MPP_SET_GPIO_MASK)
+	ldr r4, [r3]
+	and r4, r4, r5
+	str r4, [r3]
 
+	/* Set output value */
+	ldr r3, =(GPIO_OUT_VALUE_REG)
+	ldr r6, =(GPIO_PIN_MASK)
+	ldr r7, =(GPIO_CMD_VALUE)
+	ldr r5, [r3]
+	and r5, r5, r6
+	orr r5, r5, r7
 	str r5, [r3]
-	str r6, [r4]
 
-	ldr r1, =200000000
-	ldr r5, =0x7
+	/* Set pins as out */
+	ldr r4, =(GPIO_OUT_CTRL_REG)
+	ldr r5, [r4]
+	and r5, r5, r6
+	str r5, [r4]
+
+	/* Prepare the ACK command */
+	ldr r7, =(GPIO_ACK_VALUE)
+	ldr r5, [r3]
+	and r5, r5, r6
+	orr r5, r5, r7
 
 	/*
 	 * Wait between cmd (0x1) and cmd ack (0x7)
 	 * TODO - Need to reduce this delay
 	 */
+	ldr r1, =2000000000
 1:	subs r1,r1,#1
 	bne 1b
 
 	/*
 	 * Put Dram into self refresh. From here on we can perform
-	 * 8 instructions to ensure executiion from I-Cache
+	 * 8 instructions to ensure execution from I-Cache
 	 */
 	.align 5
 	str	r0, [r2]
-- 
1.7.9.5

