From c1f709f87f7d1e14425a7a84dbf889803f0cf69e Mon Sep 17 00:00:00 2001
From: Tawfik Bayouk <tawfik@marvell.com>
Date: Mon, 16 Jul 2012 17:55:19 +0300
Subject: [PATCH 182/609] Neta: Fix NFP compilation erors

Signed-off-by: Seif Mazareeb <seif@marvell.com>
---
 include/linux/mv_nfp.h    |   16 ++++++++++++++++
 include/linux/netdevice.h |   20 --------------------
 net/core/dev.c            |   20 +++++++++++++-------
 3 files changed, 29 insertions(+), 27 deletions(-)

diff --git a/include/linux/mv_nfp.h b/include/linux/mv_nfp.h
index b15fa39..a9c7872 100644
--- a/include/linux/mv_nfp.h
+++ b/include/linux/mv_nfp.h
@@ -71,9 +71,25 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 #if defined(CONFIG_MV_ETH_NFP) || defined(CONFIG_MV_ETH_NFP_MODULE)
 
+/* Supported flags */
+#define MV_EXT_L3_VALID_MASK	0x0001
+#define MV_EXT_L4_VALID_MASK	0x0002
+#define MV_EXT_VLAN_EXIST_MASK  0x0004
+#define MV_EXT_PPP_EXIST_MASK	0x0008
+#define MV_EXT_IP_FRAG_MASK	0x0010
+
+typedef struct {
+	u16 flags;
+	u16 l3_type;
+	u16 l3_offset;
+	u8  l3_hdrlen;
+	u8  l4_proto;
+} MV_EXT_PKT_INFO;
+
 struct nfp_core_ops {
 	int (*nfp_rx_ext)(struct net_device *dev, struct sk_buff *skb, MV_EXT_PKT_INFO *pktInfo);
 };
+
 extern struct nfp_core_ops *nfp_core_p;
 int nfp_core_ops_init(void);
 
diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index a82cb26..1f4e856 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -2734,26 +2734,6 @@ do {								\
 })
 #endif
 
-#ifdef CONFIG_MV_ETH_NFP_EXT
-
-/* Supported flags */
-#define MV_EXT_L3_VALID_MASK	0x0001
-#define MV_EXT_L4_VALID_MASK	0x0002
-#define MV_EXT_VLAN_EXIST_MASK  0x0004
-#define MV_EXT_PPP_EXIST_MASK	0x0008
-#define MV_EXT_IP_FRAG_MASK	    0x0010
-
-typedef struct {
-	u16 flags;
-	u16 l3_type;
-	u16 l3_offset;
-	u8  l3_hdrlen;
-	u8  l4_proto;
-} MV_EXT_PKT_INFO;
-
-int mv_eth_nfp_ext(struct net_device *dev, struct sk_buff *skb, MV_EXT_PKT_INFO *pkt_info);
-#endif /* CONFIG_MV_ETH_NFP_EXT */
-
 #endif /* __KERNEL__ */
 
 #endif	/* _LINUX_NETDEVICE_H */
diff --git a/net/core/dev.c b/net/core/dev.c
index f37c15d..f75d3b6 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -137,9 +137,12 @@
 #include <linux/if_pppox.h>
 #include <linux/ppp_defs.h>
 #include <linux/net_tstamp.h>
-#include <linux/mv_nfp.h>
 #include "net-sysfs.h"
 
+#if defined(CONFIG_MV_ETH_NFP) || defined(CONFIG_MV_ETH_NFP_MODULE)
+#include <linux/mv_nfp.h>
+#endif /* CONFIG_MV_ETH_NFP || CONFIG_MV_ETH_NFP_MODULE */
+
 /* Instead of increasing this, you should create a hash table. */
 #define MAX_GRO_SKBS 8
 
@@ -3220,16 +3223,17 @@ EXPORT_SYMBOL_GPL(netdev_rx_handler_unregister);
 #ifdef CONFIG_MV_ETH_NFP_EXT
 static struct sk_buff *handle_nfp_extrcv(struct sk_buff *skb, struct net_device *dev)
 {
-	MV_EXT_PKT_INFO *pktInfo;
+	if (nfp_core_p->nfp_rx_ext) {
 
-	pktInfo = (MV_EXT_PKT_INFO *)&skb->cb;
-	if (pktInfo->flags == 0)
-		pktInfo = NULL;
+		MV_EXT_PKT_INFO *pktInfo;
+
+		pktInfo = (MV_EXT_PKT_INFO *)&skb->cb;
+		if (pktInfo->flags == 0)
+			pktInfo = NULL;
 
-	if (nfp_core_p->nfp_rx_ext)
 		if (!nfp_core_p->nfp_rx_ext(skb->dev, skb, pktInfo))
 			return NULL;
-
+	}
 	return skb;
 }
 #endif /* CONFIG_MV_ETH_NFP_EXT */
@@ -6675,10 +6679,12 @@ static int __init net_dev_init(void)
 	dst_init();
 	dev_mcast_init();
 	rc = 0;
+
 #if defined(CONFIG_MV_ETH_NFP) || defined(CONFIG_MV_ETH_NFP_MODULE)
 	nfp_core_ops_init();
 	nfp_hook_ops_init();
 #endif /* CONFIG_MV_ETH_NFP || CONFIG_MV_ETH_NFP_MODULE */
+
 out:
 	return rc;
 }
-- 
1.7.9.5

