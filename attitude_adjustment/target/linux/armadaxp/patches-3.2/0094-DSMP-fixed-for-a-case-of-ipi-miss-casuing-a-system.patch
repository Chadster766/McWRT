From 1704079ab7ae9ba397509c7b0a916cddd815135e Mon Sep 17 00:00:00 2001
From: Seif Mazareeb <seif@marvell.com>
Date: Mon, 5 Mar 2012 02:56:46 +0200
Subject: [PATCH 094/609] DSMP fixed for a case of ipi miss casuing a system

Signed-off-by: Seif Mazareeb <seif@marvell.com>
---
 arch/arm/include/asm/entry-macro-multi.S          |    2 +-
 arch/arm/include/asm/spinlock.h                   |    4 +++-
 arch/arm/mach-armadaxp/headsmp.S                  |    2 +-
 arch/arm/mach-armadaxp/include/mach/entry-macro.S |    4 +---
 arch/arm/mach-armadaxp/platsmp.c                  |    1 -
 5 files changed, 6 insertions(+), 7 deletions(-)

diff --git a/arch/arm/include/asm/entry-macro-multi.S b/arch/arm/include/asm/entry-macro-multi.S
index 1137bc2..d74dc30 100644
--- a/arch/arm/include/asm/entry-macro-multi.S
+++ b/arch/arm/include/asm/entry-macro-multi.S
@@ -20,7 +20,7 @@
 	 * this macro assumes that irqstat (r2) and base (r6) are
 	 * preserved from get_irqnr_and_base above
 	 */
-#ifdef CONFIG_MV_IPC_NET
+#ifdef CONFIG_MV_IPC_DRIVER
 	test_for_ipc r0, r6, r5, lr
 	movne   r1, sp
 	adrne   lr, BSYM(1b)
diff --git a/arch/arm/include/asm/spinlock.h b/arch/arm/include/asm/spinlock.h
index 2f66e73..25f6224 100644
--- a/arch/arm/include/asm/spinlock.h
+++ b/arch/arm/include/asm/spinlock.h
@@ -149,6 +149,8 @@ static inline void arch_write_lock(arch_rwlock_t *rw)
 	WFE("ne")
 #endif
 "	strexeq	%0, %2, [%1]\n"
+"	teq	%0, #0\n"
+"	bne	1b"
 	: "=&r" (tmp)
 	: "r" (&rw->lock), "r" (0x80000000)
 	: "cc");
@@ -214,7 +216,7 @@ static inline void arch_read_lock(arch_rwlock_t *rw)
 "	adds	%0, %0, #1\n"
 "	strexpl	%1, %0, [%2]\n"
 #ifndef CONFIG_SHEEVA_ERRATA_ARM_CPU_BTS61
-	WFE("ne")
+	WFE("mi")
 #endif
 "	rsbpls	%0, %1, #0\n"
 "	bmi	1b"
diff --git a/arch/arm/mach-armadaxp/headsmp.S b/arch/arm/mach-armadaxp/headsmp.S
index ac75648..f184a5c 100644
--- a/arch/arm/mach-armadaxp/headsmp.S
+++ b/arch/arm/mach-armadaxp/headsmp.S
@@ -66,7 +66,7 @@ l0_dis_skip:
 sp_ena_skip:
 #endif
 pen:
-	#if __LINUX_ARM_ARCH__ >= 7
+#if __LINUX_ARM_ARCH__ >= 7
 	dsb
 #else
 	 mcr p15, 0, r0, c7, c10, 4
diff --git a/arch/arm/mach-armadaxp/include/mach/entry-macro.S b/arch/arm/mach-armadaxp/include/mach/entry-macro.S
index dd783c0..1ebac5a 100644
--- a/arch/arm/mach-armadaxp/include/mach/entry-macro.S
+++ b/arch/arm/mach-armadaxp/include/mach/entry-macro.S
@@ -85,7 +85,6 @@
 	beq	1002f
 	ldr	\irqnr, [\base, #AXP_IN_DOORBELL_CAUSE]
 	HTOLL	\irqnr, \tmp
-	ands    \tmp, \irqnr, #0xF000
 	ands    \irqnr, \irqnr, #0xFF		@ 8 lower doorbells are considered IPI
 	beq     1002f
 	clz	\irqnr, \irqnr
@@ -93,8 +92,7 @@
 	sub	\irqnr, \tmp, \irqnr
 	mov     \tmp, #1
 	lsl     \tmp, \irqnr
-	bic 	\tmp, \tmp, \tmp
-	HTOLL   \tmp, \tmp
+	mvn     \tmp, \tmp
 	strh   	\tmp, [\base, #AXP_IN_DOORBELL_CAUSE]	@ clean irq
 1002:
 	.endm
diff --git a/arch/arm/mach-armadaxp/platsmp.c b/arch/arm/mach-armadaxp/platsmp.c
index f53efab..c9de031 100644
--- a/arch/arm/mach-armadaxp/platsmp.c
+++ b/arch/arm/mach-armadaxp/platsmp.c
@@ -35,7 +35,6 @@ unsigned int group_cpu_mask = ((1 << NR_CPUS) - 1);
 /*
  * We use IRQ1 as the IPI
  */
-//volatile unsigned int global_test_irqnr;
 static inline void axp_smp_cross_call(const struct cpumask *mask, unsigned int irqnr)
 {
         unsigned long map = *cpus_addr(*mask);
-- 
1.7.9.5

