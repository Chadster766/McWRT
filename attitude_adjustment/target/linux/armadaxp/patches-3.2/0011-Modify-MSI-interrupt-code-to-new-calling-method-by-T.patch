From 92ccc0440d63ef3a0c0fc459e095edb189938e2b Mon Sep 17 00:00:00 2001
From: Seif Mazareeb <seif@marvell.com>
Date: Wed, 22 Feb 2012 13:27:35 +0200
Subject: [PATCH 011/609] Modify MSI interrupt code to new calling method ( by
 Tawfik B.)

Signed-off-by: Seif Mazareeb <seif@marvell.com>
---
 arch/arm/plat-armada/msi.c |   27 ++++++++++++++-------------
 1 file changed, 14 insertions(+), 13 deletions(-)

diff --git a/arch/arm/plat-armada/msi.c b/arch/arm/plat-armada/msi.c
index 100c757..b74b5d1 100644
--- a/arch/arm/plat-armada/msi.c
+++ b/arch/arm/plat-armada/msi.c
@@ -40,7 +40,7 @@ void __init armada_msi_init(void)
 {
 	unsigned long temp;
 
-	set_irq_chained_handler(IRQ_AURORA_IN_DRBL_HIGH, armada_msi_irq_handler);
+	irq_set_chained_handler(IRQ_AURORA_IN_DRBL_HIGH, armada_msi_irq_handler);
 
 	/* Unmask private doorbells 16-31 */
 	temp = MV_REG_READ(AXP_IN_DRBEL_MSK) | (0xFFFF0000);
@@ -82,15 +82,16 @@ void arch_teardown_msi_irq(unsigned int irq)
 	destroy_irq(irq);
 }
 
-static void armada_msi_nop(unsigned int irq)
+static void armada_msi_nop(struct irq_data *d)
 {
 	return;
 }
 
 #ifdef CONFIG_SMP
-int armada_msi_set_affinity(unsigned int irq, const struct cpumask *mask_val)
+int armada_msi_set_affinity(struct irq_data *d, const struct cpumask *mask_val,bool force)
 {
 	struct msi_msg msg;
+	u32 irq=d->irq;
 	int msi_irq;
 	int i;
 	
@@ -103,7 +104,7 @@ int armada_msi_set_affinity(unsigned int irq, const struct cpumask *mask_val)
 		msg.data |= (0x1 << (AXP_SW_TRIG_IRQ_CPU_TARGET_OFFS + i));
 
 	write_msi_msg(irq, &msg);
-	cpumask_copy(irq_desc[irq].affinity, mask_val);
+	cpumask_copy(d->affinity, mask_val);
 	
 	return 0;
 }
@@ -118,14 +119,14 @@ void second_cpu_msi_init(void)
 #endif
 
 struct irq_chip armada_msi_irq_chip = {
-	.name		= "axp_msi_irq",
-	.ack 		= armada_msi_nop,
-	.enable 	= unmask_msi_irq,
-	.disable 	= mask_msi_irq,
-	.mask 		= mask_msi_irq,
-	.unmask 	= unmask_msi_irq,
+	.name			= "axp_msi_irq",
+	.irq_ack 		= armada_msi_nop,
+	.irq_enable 		= unmask_msi_irq,
+	.irq_disable 		= mask_msi_irq,
+	.irq_mask 		= mask_msi_irq,
+	.irq_unmask 		= unmask_msi_irq,
 #ifdef CONFIG_SMP
-	.set_affinity	= armada_msi_set_affinity,
+	.irq_set_affinity	= armada_msi_set_affinity,
 #endif
 };
 
@@ -139,7 +140,7 @@ int arch_setup_msi_irq(struct pci_dev *pdev, struct msi_desc *desc)
 		return irq;
 
 	msi_irq = irq - IRQ_AURORA_MSI_START;
-	set_irq_msi(irq, desc);
+	irq_set_msi_desc(irq, desc);
 
 	msg.address_hi = 0x0;
 	msg.address_lo = AXP_SW_TRIG_IRQ_PHYS;
@@ -147,7 +148,7 @@ int arch_setup_msi_irq(struct pci_dev *pdev, struct msi_desc *desc)
 			((msi_irq + NR_PRIVATE_MSI_GROUP) & AXP_SW_TRIG_IRQ_INITID_MASK);
 
 	write_msi_msg(irq, &msg);
-	set_irq_chip_and_handler(irq, &armada_msi_irq_chip, handle_edge_irq);
+	irq_set_chip_and_handler(irq, &armada_msi_irq_chip, handle_edge_irq);
 
 	return 0;
 }
-- 
1.7.9.5

