/*
 * arch/ubicom32/include/asm/ocm_text.lds.inc
 *	<TODO: Replace with short file description>
 *
 * (C) Copyright 2009, Ubicom, Inc.
 *
 * This file is part of the Ubicom32 Linux Kernel Port.
 *
 * The Ubicom32 Linux Kernel Port is free software: you can redistribute
 * it and/or modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation, either version 2 of the
 * License, or (at your option) any later version.
 *
 * The Ubicom32 Linux Kernel Port is distributed in the hope that it
 * will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
 * the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the Ubicom32 Linux Kernel Port.  If not,
 * see <http://www.gnu.org/licenses/>.
 *
 * Ubicom32 implementation derived from (with many thanks):
 *   arch/m68knommu
 *   arch/blackfin
 *   arch/parisc
 */
*(.text.do_csum)
*(.text.tcp_packet)
*(.text.ipt_do_table)
*(.text.nf_conntrack_in)
*(.text.ip_forward)
*(.text.dev_queue_xmit)
*(.text.netif_receive_skb)
*(.text.ip_route_input)
*(.text.ip_finish_output)
*(.text.nf_iterate)
*(.text.__hash_conntrack)
*(.text.memset)
*(.text.memcpy)
*(.text.ip_rcv)
*(.text.__nf_conntrack_find)
*(.text.dev_hard_start_xmit)
*(.text.vlan_dev_hard_start_xmit)
*(.text.vlan_dev_hard_header)
*(.text.__nf_ct_refresh_acct)
*(.text.tcp_error)
*(.text.pfifo_fast_enqueue)
*(.text.ipv4_confirm)
*(.text.ip_output)
*(.text.neigh_connected_output)
*(.text.nf_hook_slow)
*(.text.nf_nat_packet)
*(.text.local_bh_enable)
*(.text.pfifo_fast_dequeue)
*(.text.ubi32_eth_receive)
*(.text.nf_nat_fn)
*(.text.skb_checksum)
*(.text.memmove)
*(.text.ubi32_eth_tx_done)
*(.text.eth_header)
*(.text.skb_release_data)
*(.text.nf_conntrack_find_get)
*(.text.process_backlog)
*(.text.vlan_skb_recv)
*(.text.ip_rcv_finish)
*(.text.__qdisc_run)
*(.text.skb_push)
*(.text.eth_type_trans)
*(.text.__alloc_skb)
*(.text.netif_rx)
*(.text.nf_ip_checksum)
*(.text.__skb_checksum_complete_head)
*(.text.ipv4_conntrack_defrag)
*(.text.tcp_pkt_to_tuple)
*(.text.kfree)
*(.text.tcp_manip_pkt)
*(.text.skb_put)
*(.text.nf_ct_get_tuple)
*(.text.__kmalloc)
*(.text.ubi32_eth_start_xmit)
*(.text.free_block)
*(.text.ipt_hook)
*(.text.kmem_cache_free)
*(.text.skb_pull_rcsum)
*(.text.cache_alloc_refill)
*(.text.skb_release_head_state)
*(.text.manip_pkt)
*(.text.ip_sabotage_in)
*(.text.ip_forward_finish)
*(.text.kmem_cache_alloc)
*(.text.local_bh_disable)
*(.text.ipv4_pkt_to_tuple)
*(.text.inet_proto_csum_replace4)
*(.text.__nf_ct_l4proto_find)
*(.text.csum_partial)
*(.text.neigh_resolve_output)
*(.text.__kfree_skb)
*(.text.kfree_skb)
*(.text.__find_vlan_dev)
*(.text.ldsr_ctxsw_thread)
*(.text.__do_IRQ)
*(.text.skb_pull)
*(.text.ipv4_invert_tuple)
*(.text.nf_ct_invert_tuplepr)
*(.text.skb_make_writable)
*(.text.ipv4_get_l4proto)
*(.text.handle_IRQ_event)
*(.text.net_rx_action)
*(.text.__do_softirq)
*(.text.nf_nat_in)
*(.text.note_interrupt)
*(.text.ipv4_conntrack_in)
*(.text.dst_release)
*(.text.tasklet_action)
*(.text.nf_nat_out)
*(.text.nf_ct_invert_tuple)
*(.text.do_IRQ)
*(.text.__tasklet_schedule)
*(.text.__skb_checksum_complete)
*(.text.ubi32_eth_interrupt)
*(.text.dev_kfree_skb_any)
*(.text.ret_from_interrupt_to_kernel)
*(.text.preemptive_context_save)
*(.text.irq_ack_vector)
*(.text.update_wall_time)
*(.text.ldsr_thread)
*(.text.irq_exit)
*(.text.ubi32_eth_do_tasklet)
*(.text.__napi_schedule)
*(.text.idle_cpu)
*(.text.run_timer_softirq)
*(.text.ldsr_mask_vector)
*(.text.irq_enter)
*(.text.ldsr_get_lsb)
*(.text.ldsr_unmask_vector)
*(.text.ip_fast_csum)
*(.text.hrtimer_run_queues)
*(.text.tcp_invert_tuple)
*(.text.T___705)
*(.text.run_posix_cpu_timers)
*(.text.free_hot_cold_page)
*(.text.lock_timer_base)
*(.text.calc_delta_mine)
*(.text.slab_destroy)
*(.text.rcu_pending)
*(.text.scheduler_tick)
*(.text.hrtimer_run_pending)
*(.text.do_softirq)
*(.text.del_timer)
*(.text.irq_end_vector)
*(.text.pci_read_u32)
*(.text.udivmodsi4)
*(.text.memcmp)
*(.text.memset)
*(.text.__slab_alloc)
*(.text.br_handle_frame)
*(.text.br_fdb_update)
*(.text.__br_fdb_get)
*(.text.br_forward)
*(.text.br_handle_frame_finish)
*(.text.pci_write_u32)
*(.text.kmem_freepages)
*(.text.br_dev_queue_push_xmit)
*(.text.ioread32)
*(.text.next_zones_zonelist)
*(.text.ubi32_pci_read_u32)
*(.text.zone_watermark_ok)
*(.text.__rmqueue_smallest)
*(.text.ubi32_eth_napi_poll)
*(.text.ubi32_pci_write_u32)
*(.text.ubi32_pci_read_u32)
*(.text._local_bh_enable)
*(.text._local_bh_disable)
*(.text.get_slab)
