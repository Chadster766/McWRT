From 27cce868329354f40800ca56006d5a6307902378 Mon Sep 17 00:00:00 2001
From: Matthew Fatheree <Matthew.Fatheree@belkin.com>
Date: Thu, 15 May 2014 20:45:15 +0700
Subject: [PATCH 28/31] Support auto-share when hotplug usb devices

Signed-off-by: Matthew Fatheree <Matthew.Fatheree@belkin.com>
---
 .../base-files/etc/hotplug.d/block/40-mount        |   92 ++++++++++++++++++++
 target/linux/armadaxp/base-files/sbin/smb_share.sh |   90 +++++++++++++++++++
 2 files changed, 182 insertions(+)
 create mode 100644 target/linux/armadaxp/base-files/etc/hotplug.d/block/40-mount
 create mode 100755 target/linux/armadaxp/base-files/sbin/smb_share.sh

diff --git a/target/linux/armadaxp/base-files/etc/hotplug.d/block/40-mount b/target/linux/armadaxp/base-files/etc/hotplug.d/block/40-mount
new file mode 100644
index 0000000..3c560e3
--- /dev/null
+++ b/target/linux/armadaxp/base-files/etc/hotplug.d/block/40-mount
@@ -0,0 +1,92 @@
+#!/bin/sh
+# Copyright (C) 2009-2012 OpenWrt.org
+# Copyright (C) 2010 Vertical Communications
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+
+. /lib/functions/block.sh
+
+blkdev=`dirname $DEVPATH`
+if [ `basename $blkdev` != "block" ]; then
+
+    device=`basename $DEVPATH`
+    mountpoint=`sed -ne "s|^[^ ]*/$device ||; T; s/ .*//p" /proc/self/mounts`
+
+    case "$ACTION" in
+	add)
+
+		local from_fstab
+		local anon_mount
+		local anon_swap
+		local anon_fsck
+		local mds_mount_target
+		local mds_mount_device
+		local mds_mount_fstype
+		local sds_swap_device
+		local use_device
+		local do_fsck=0
+		local fsck_type
+		
+		local autoswap_from_fstab
+		local automount_from_fstab
+
+	    mount_dev_section_cb() {
+    		mds_mount_target="$2"
+			mds_mount_device="$3"
+			mds_mount_fstype="$4"
+			mds_mount_enabled="$6"
+	    }
+
+	    swap_dev_section_cb() { 
+			sds_swap_device="$2"
+			return 0
+	    }
+
+		config_get_automount
+		automount_from_fstab="$from_fstab"
+		[ "$automount_from_fstab" -eq 1 ] && {
+			config_get_mount_section_by_device "/dev/$device"
+			use_device="$mds_mount_device"
+			[ "$mds_mount_enabled" -eq 1 ] && {
+				if [ -n "$mds_mount_target" ]; then
+					grep -q "/dev/$device" /proc/swaps || grep -q "/dev/$device" /proc/mounts || {
+						( mkdir -p "$mds_mount_target" && mount "$mds_mount_target" ) 2>&1 | tee /proc/self/fd/2 | logger -t 'fstab'
+					}
+				else
+					logger -t 'fstab' "Mount enabled for $mds_mount_device but it doesn't have a defined mountpoint (target)"
+				fi
+			}
+		}
+
+		[ -z "$use_device" ] && {
+			config_get_autoswap
+			autoswap_from_fstab="$from_fstab"
+		
+			[ "$autoswap_from_fstab" -eq 1 ] && {
+				config_get_swap_section_by_device "/dev/$device"
+				use_device="$sds_swap_device"
+			}
+		}
+		
+		grep -q "/dev/$device" /proc/swaps || grep -q "/dev/$device" /proc/mounts || {
+			[ "$anon_mount" -eq 1 -a -z "$use_device" ] && {
+				case "$device" in
+					mtdblock*) ;;
+					*)
+						( mkdir -p /mnt/$device && mount /dev/$device /mnt/$device && /sbin/smb_share.sh add /dev/$device ) 2>&1 | tee /proc/self/fd/2 | logger -t 'fstab'
+					;;
+				esac
+			}
+		}
+		reset_dev_section_cb
+		;;
+	remove)
+		/sbin/smb_share.sh remove /dev/$device
+		umount /dev/$device
+		umount $mountpoint
+		;;
+    esac	
+
+fi
+
diff --git a/target/linux/armadaxp/base-files/sbin/smb_share.sh b/target/linux/armadaxp/base-files/sbin/smb_share.sh
new file mode 100755
index 0000000..1c6a109
--- /dev/null
+++ b/target/linux/armadaxp/base-files/sbin/smb_share.sh
@@ -0,0 +1,90 @@
+#!/bin/sh
+source /etc/functions.sh
+source /etc/init.d/samba 
+smb_share_lock_file=/tmp/smb_share
+
+smb_share_reload_config (){
+	config_load samba
+	config_foreach smb_header samba
+	config_foreach smb_add_share sambashare
+	killall -HUP smbd nmbd
+}
+
+smb_share_add (){
+	# "device" is /dev/sdaX for example
+	local device=$1
+	target_dev_name=`echo $device | sed -e "s/\/dev\///"`
+	lock ${smb_share_lock_file}
+	# check if it already exists
+	total_smbshare=`uci show samba | grep "=sambashare" | wc -l`
+	total_smbshare=$((total_smbshare - 1))
+	for i in `seq 0 ${total_smbshare}`
+	do
+		dev_name=`uci get samba.@sambashare[$i].name`
+		if [ "${dev_name}" = "${target_dev_name}" ]
+		then
+			lock -u ${smb_share_lock_file}
+			return
+		fi
+	done
+	# check if path really exists
+	if [ -d /mnt/${target_dev_name} ]
+	then
+		chmod 777 /mnt/${target_dev_name}
+	else
+		lock -u ${smb_share_lock_file}
+		return
+	fi
+	# add new sambashare config
+	uci add samba sambashare > /dev/null
+	uci set samba.@sambashare[-1]=sambashare
+	uci set samba.@sambashare[-1].name=${target_dev_name}
+	uci set samba.@sambashare[-1].path=/mnt/${target_dev_name}
+	uci set samba.@sambashare[-1].read_only=no
+	uci set samba.@sambashare[-1].guest_ok=yes
+	uci set samba.@sambashare[-1].create_mask='0777'
+	uci set samba.@sambashare[-1].dir_mask='0777'
+	uci commit samba
+	smb_share_reload_config
+	lock -u ${smb_share_lock_file}
+}
+
+smb_share_remove (){
+	# "device" is /dev/sdaX for example
+	local device=$1
+	target_dev_name=`echo $device | sed -e "s/\/dev\///"`
+	lock ${smb_share_lock_file}
+	total_smbshare=`uci show samba | grep "=sambashare" | wc -l`
+	total_smbshare=$((total_smbshare - 1))
+	for i in `seq 0 ${total_smbshare}`
+	do
+		dev_name=`uci get samba.@sambashare[$i].name`
+		if [ "${dev_name}" = "${target_dev_name}" ]
+		then
+			uci delete samba.@sambashare[$i]
+			uci commit samba
+			smb_share_reload_config
+			break
+		fi
+	done
+	lock -u ${smb_share_lock_file}
+}
+
+if [ $# -lt 2 ]
+then
+        echo "smb_share add|remove dev_path"
+        echo "dev_path is /dev/sda2 for example"
+        exit 0
+fi
+
+case "$1" in
+add)
+	smb_share_add $2
+	;;
+remove)
+	smb_share_remove $2
+	;;
+*)
+	echo "smb_share add|remove dev_path"
+	echo "dev_path is /dev/sda2 for example"
+esac
-- 
1.7.9.5

