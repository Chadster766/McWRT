From c62ac0e3bd7948a53aa231b6776a564cb0c25afc Mon Sep 17 00:00:00 2001
From: Matthew Fatheree <Matthew.Fatheree@belkin.com>
Date: Wed, 14 May 2014 09:29:13 +0700
Subject: [PATCH 21/31] Enable gpio 32, 33 for wps, reset button

Signed-off-by: Matthew Fatheree <Matthew.Fatheree@belkin.com>
---
 target/linux/armadaxp/config-3.2                   |    9 ++
 .../1007-gpio_enable_wps_rst_button.patch          |  112 ++++++++++++++++++++
 2 files changed, 121 insertions(+)
 create mode 100644 target/linux/armadaxp/patches-3.2/1007-gpio_enable_wps_rst_button.patch

diff --git a/target/linux/armadaxp/config-3.2 b/target/linux/armadaxp/config-3.2
index 8594ddd..004f5e3 100644
--- a/target/linux/armadaxp/config-3.2
+++ b/target/linux/armadaxp/config-3.2
@@ -6,6 +6,8 @@ CONFIG_GENERIC_ACL=y
 CONFIG_HWMON=y
 # CONFIG_HWMON_DEBUG_CHIP is not set
 # CONFIG_HWMON_VID is not set
+CONFIG_INPUT_EVBUG=y
+CONFIG_INPUT_EVDEV=y
 CONFIG_IP_MROUTE=y
 # CONFIG_IP_PIMSM_V1 is not set
 # CONFIG_IP_PIMSM_V2 is not set
@@ -151,6 +153,13 @@ CONFIG_SENSORS_TMP421=y
 # CONFIG_SENSORS_W83795 is not set
 # CONFIG_SENSORS_W83L785TS is not set
 # CONFIG_SENSORS_W83L786NG is not set
+CONFIG_SERIO=y
+# CONFIG_SERIO_ALTERA_PS2 is not set
+CONFIG_SERIO_LIBPS2=y
+# CONFIG_SERIO_PCIPS2 is not set
+# CONFIG_SERIO_PS2MULT is not set
+# CONFIG_SERIO_RAW is not set
+CONFIG_SERIO_SERPORT=y
 # CONFIG_TDM_DEV_TEST_SUPPORT is not set
 CONFIG_TMPFS_POSIX_ACL=y
 CONFIG_TMPFS_XATTR=y
diff --git a/target/linux/armadaxp/patches-3.2/1007-gpio_enable_wps_rst_button.patch b/target/linux/armadaxp/patches-3.2/1007-gpio_enable_wps_rst_button.patch
new file mode 100644
index 0000000..41a9480
--- /dev/null
+++ b/target/linux/armadaxp/patches-3.2/1007-gpio_enable_wps_rst_button.patch
@@ -0,0 +1,112 @@
+diff --git a/arch/arm/mach-armadaxp/Makefile b/arch/arm/mach-armadaxp/Makefile
+index e8bab44..870c1f4 100644
+--- a/arch/arm/mach-armadaxp/Makefile
++++ b/arch/arm/mach-armadaxp/Makefile
+@@ -51,7 +51,7 @@ QD_OBJS		= $(HAL_QD_DIR)/src/driver/gtDrvConfig.o $(HAL_QD_DIR)/src/driver/gtDrv
+ 		  $(HAL_QD_DIR)/src/msapi/gtPIRL2.o $(HAL_QD_DIR)/src/msapi/gtCCPVT.o		\
+ 		  $(HAL_QD_DIR)/src/msapi/gtPCSCtrl.o
+ 
+-LSP_OBJS        = core.o irq.o time.o leds.o sysmap.o export.o clock.o
++LSP_OBJS        = core.o irq.o time.o leds.o sysmap.o export.o clock.o board_mamba.o
+ 
+ obj-y   				:=  armadaxp.o
+ armadaxp-objs  				:=$(LSP_OBJS) $(COMMON_OBJS) $(OSSERVICES_OBJS) $(HAL_OBJS) 	\
+diff --git a/arch/arm/mach-armadaxp/board_mamba.c b/arch/arm/mach-armadaxp/board_mamba.c
+new file mode 100644
+index 0000000..d307c93
+--- /dev/null
++++ b/arch/arm/mach-armadaxp/board_mamba.c
+@@ -0,0 +1,93 @@
++/******************************************************************************
++Marvell GPL License Option
++
++If you received this File from Marvell, you may opt to use, redistribute and/or
++modify this File in accordance with the terms and conditions of the General
++Public License Version 2, June 1991 (the "GPL License"), a copy of which is
++available along with the File in the license.txt file or by writing to the Free
++Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 or
++on the worldwide web at http://www.gnu.org/licenses/gpl.txt.
++
++THE FILE IS DISTRIBUTED AS-IS, WITHOUT WARRANTY OF ANY KIND, AND THE IMPLIED
++WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY
++DISCLAIMED.  The GPL License provides additional details about this warranty
++disclaimer.
++*******************************************************************************/
++#include <linux/platform_device.h>
++#include <linux/miscdevice.h>
++#include "../plat-armada/mv_drivers_lsp/mv_btns/btns_driver.h"
++#include "../plat-orion/include/plat/gpio.h"
++#include "btns_dev.h"
++#include "ctrlEnv/mvCtrlEnvLib.h"
++#include <linux/gpio_keys.h>
++#include <linux/input.h>
++#include <linux/gpio.h>
++
++/*
++ * common debug for all
++ */
++#undef DEBUG
++
++#ifdef DEBUG
++#define dprintk   printk
++#else
++#define dprintk(a...)
++#endif
++
++#define	MAMBA_GPIO_WPS_BUTTON	32
++#define MAMBA_GPIO_RST_BUTTON	33
++
++static struct gpio_keys_button mv_ev_buttons[] = {
++        {
++                .gpio           = MAMBA_GPIO_WPS_BUTTON,
++                .code           = KEY_WPS_BUTTON,
++                .desc           = "WPS",
++                .active_low     = 1,
++                .wakeup         = 1,
++        },
++        {
++                .gpio           = MAMBA_GPIO_RST_BUTTON,
++                .code           = KEY_RESTART,
++                .desc           = "RESET",
++                .active_low     = 1,
++                .wakeup         = 1,
++        },
++};
++
++static struct gpio_keys_platform_data mamba_ev_data = {
++	.buttons        = mv_ev_buttons,
++	.nbuttons       = ARRAY_SIZE(mv_ev_buttons),
++};
++
++static struct platform_device mamba_ev_device = {
++	.name		= "gpio-keys",
++	.id		= 0,
++	.num_resources	= 0,
++	.dev = {
++		.platform_data  = &mamba_ev_data,
++	},
++};
++
++static int __init mamba_ev_init(void)
++{
++	int status;
++
++	printk(KERN_NOTICE "Mamba Buttons Event Device Load\n");
++
++	orion_gpio_set_valid(MAMBA_GPIO_WPS_BUTTON, 1);
++	orion_gpio_set_valid(MAMBA_GPIO_RST_BUTTON, 1);
++
++	/* register device */
++	status = platform_device_register(&mamba_ev_device);
++	if (status) {
++		printk(KERN_WARNING
++			"Can't register Mamba Buttons Event Device,status=%d\n",
++			status);
++		return status;
++	}
++
++	return 0;
++}
++
++subsys_initcall(mamba_ev_init);
++
-- 
1.7.9.5

